https://progalap.elte.hu/specifikacio/?data=H4sIAAAAAAAAE3VSy2rCQBT9lcusEkg0SUkXQyMofVAsFkrroiaLxEzsRDOWJgpVhHbntp%2FhP3QX%2BiN%2BSe%2FkoQbawJ3cOffMPWcea5K%2BsjGP%2BNjP%2BFwQSnqMgoD9dgsDDZI6eZmX6fPIbLWEBjgmniv6nEIY1KQpLzPJCQMsXy8pJGzGJiwECgPQO0hzBeBXwQpXwYHL7kO3p8RO2Ru1RrEG3IPOIQcdTE91xVVEwYQLBy3iYBqGAb4ISyhpQPvtB5R%2BCsseGlAkFh%2BwpMB025DrpBDXIPbkxDZU1HpCLSUM5L6kyf7tMP%2B8u7%2FpPircsXC5drqJjgOKgDZYKrrFxa5ot2HI03TlL9mKZfkurcDo5wui%2FHsyWeY78Y4bOzYu6qzVWsiTkhIF8Cj7I%2FCnWsHIKgavJJA5y3fThkp9D3p52g0pjgfUkPr3ClxBNJKxNEsJHa1J6Gc%2BvhlB4cwVCQXbFUin8op1PGMDH4qNYWHI3PDqiomzk7COFck9P0ZRCQMKliumvOpslT8bvQg%2FYegAszeWLmYZoebG2%2FwClzLmgdcCAAA%3D

Be: n ∈ N, m ∈ N, hom ∈ Z[1..n, 1..m]
Ki: db ∈ N, ki ∈ N[1..db]
Fv: meleged : N -> N,
    meleged(i) = DARAB(j=1..n, hom[j, i] > hom[j, i - 1])
Ef: 1 <= n <= 1000 and 1 <= m <= 1000 and ∀ i ∈ [1..n] : (∀ j ∈ [1..m] : (-50 <= hom[i, j] <= 50))
Uf: (db, ki) = KIVÁLOGAT(i=2..m, meleged(i) >= (n / 2), i) // itt a '/'-t átvinni a másik oldalra szorzásnak
// tehát meleged(i) * 2 > n

// Visszavezetés

// fő függvény - KIVÁLOGAT
// e..u -> 2..m
// T(i) -> meleged(i) >= (n / 2)
// t(i) -> i

// mellékfüggvény - meleged - DARAB
// e..u -> i..n
// T(i) -> hom[j, i] > hom[j, i - 1]

n: 3
m: 5
hom:
  - [10, 15, 12, 10, 10]
  - [11, 11, 11, 11, 20]
  - [12, 16, 16, 16, 20]
db: 2
ki:
  - 2
  - 5


https://progalap.elte.hu/stuki/?data=H4sIAAAAAAAAE61W23LaMBD9FUaZ6SRTSo0hEGjpQwgTICEtSZsbw4MsyUZgy8GYXId%2Fr2TQIifQhiR%2BQRxJ55zdldZ%2BQpyiKrJyRXu3ZBXLedsqFYv5QnkXZdEgvGVRS86Lqe9n0YT5jMSMLhERUjZB1Sc07u4HY69O1TghBCCLbnDERLzcNOCUMoGqLvYnLIvihxsmN0zYeMoEYXIDGXCfyj0tKrl7yBljr3UhLuVMuUHal1dnR6g%2Fy6JOW1zVcd0DTQDerzl8tOXc7YWcObw%2B9nD5mMhhYXj3E7uHnUQelmh5Y89S3jS1xkSMYxbI5XJFzO5jCVGnWrOQ1MBT0TwUgzxoAJDSMCxuGmipbfl7TTzPKPBoOYN4k5DupEaiFQrKYx4KlZ1aPpcTEnRC%2BnC28NNKxSQdeFf3rUZjNAEHAKQcgOvNA7b%2BdF3vvHGSBBxM2JSXSy2QAyAllz%2FqVKzu2F4rJ8LwRtmHhZrP2Pkx9sGgsg88Ws4gNuSMQ7NajrvPijUIg94wm%2BH9zCcv%2FpbRf7%2Fk%2B9%2Bd6Ic6qNGU7UdYkEGqlEa1EoUVSyAj0j%2FUQvsHIOXfYN3oClHnc3KooIFoGaOjGDJGy9r8pkJr0BoAvLsbBLLteoyqeJRSeHB2jf3BASgBkFKCVvmGK3LviXr79%2FyMAY%2BWM4g3Sd6qnsBrdi4XrOoJEJN0cPxAKidFVgAHAKQcgOvNA87%2FCk6b7VNLzuDW0K1zeSH6SVGvR7y71zKKugBSyt0DGxf8x8f%2FtgdYqPmMnR8TCRhU9oEHrteS2JAzzs8r28PiRG7znaQ%2F1DLb4qu98%2B%2FWYBRtXWuAbKhOqksCnXRZI8O7wfqm1gDlhhesBt4tM%2BI96vRrHM2kzkRmhcShF%2BFA1ekJCRyofR3M1TvxFkccO776lkK8qtpfFIYvLtZkEN6dL1eqRM%2FBJsOURXNklgVyKFP1ZCdTzZwsCmSKDdNiRnt6zrtSftZXB8MPo%2BSFPQ%2B8h7Zc15KPJNlSv65KpsQIYI61CyM3GZWtgoWTEWHY3Suj%2FjyP%2B5iMvCicCrogdmxHvUy31K8mZkRjrEywHrnJiBaJxWxFp75VX9AR%2BSSq8tF0rq0x5lKyjs6o6AtW9SxifhW%2F61Yq81nL2iMV9em9xRgr0pKZkdnsL%2FV3SFKtCwAA
